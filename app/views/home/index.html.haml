
#ground-wrapper  
  #ground
  .container_12.clear_floats
    .grid_4
      %ul#top-tabs.nav.nav-tabs.left
        %li.active
          %a{:href => '#top', 'data-toggle' => 'tab'}
            - @top_labels.each do |kind,label|
              .top-title.question.bebas{'data-kind' => kind, :class => kind == :all ? '' : 'hide'}= label
      .tab-content
        #top.tab-pane.active
          - @top.keys.each_with_index do |kind, i|
            - ktop = @top[kind]
            %ul.top{'data-kind' => kind, :class => i>0 ? 'hide' : ''}
              - ktop.each do |s|
                %li
                  - if kind == :ec
                    = image_tag School.el_image(:mini, s.esd_el_2014.andand.overall_rating), :class => 'mini-icon float_left'
                  - else
                    = image_tag School.k12_image(s.grades[:cumulative][:letter].to_s, :small), :class => 'mini-icon float_left'
                  = link_to s.name, s
                          
    
    .grid_8
      %ul.nav.nav-tabs
        %li.active
          %a{:href => '#location', 'data-toggle' => 'tab'}
            .question.bebas By Location
        %li
          %a{:href => '#name', 'data-toggle' => 'tab'}
            .question.bebas By Name
        %li
          %a{:href => '#characteristics', 'data-toggle' => 'tab'}
            .question.bebas By Characteristics
            
      
      .tab-content
        #location.tab-pane.active
          = render 'shared/filters', :long_names => true
          .clear_floats
      
        
        #name.tab-pane
          = form_tag '/search', { :method => :post, :class => 'form-byname search' } do
            = text_field_tag :q, nil, :placeholder => 'Search by school name', :autocomplete => 'off'
            %a#name-search.btn.search{:href => '#'} Search &gt;
          .clear_floats
            
        #characteristics.tab-pane
          - @dropdowns.each do |menu|
            .dropdown
              %a.trigger{:data => {:toggle => 'dropdown', :group => menu[:key], :title => menu[:title]}, :href => '#'}
                %span.title= menu[:title]
                %span.caret
              %ul.dropdown-menu
                %li= link_to 'Clear selection', '#'
                - menu[:options].each do |label, key, val|
                  %li= link_to label, '#', 'data-key' => key, 'data-value' => val.is_a?(String) ? val : val.to_json

          = form_tag '/schools', { :method => :post, :class => 'char-form' } do
            = hidden_field_tag :filter, nil
            = hidden_field_tag :complex, nil
          %a#char-search.btn.search.clear_floats{:href => '#'} Search &gt;
        
      
      .clear_floats
      %br/
      
      .block
        %p.orange Every year, Excellent Schools Detroit gathers a group of parents, experts, and teachers to grade schools throughout the city. We look at test scores, student progress, and the school environment. Use this Scorecard to find results for the schools you are interested in.
        %h3.bebas.underlined= @tips.title
        = raw(@tips.body)
        
        %h3.bebas.underlined= @guides.title
        = raw(@guides.body)
        
      .clear_floats
      %br/
      %br/

:javascript
  $(document).ready(function() {
    var school_names = #{School.select('id, name').collect { |s| s.name }.to_json};
    $('input#q').typeahead({ source: school_names });
    $('#name-search').click(function(e) {
      $('.form-byname').submit();
      return false;
    });

    $('.btn-group.grades a').click(function(e) {
      var kind = $(this).data('filter');
      $('.top-title, ul.top').addClass('hide');
      $(".top-title[data-kind='" + kind + "'], ul.top[data-kind='" + kind + "']").removeClass('hide');
      return false;
    });
    
    var charFilterGrade = null;
    var charFilters = {};
    $('#characteristics .dropdown-menu li a').click(function(e) {
      var dd = $(this).closest('.dropdown');
      var trigger = $('a.trigger', dd), group = trigger.data('group');
      var key = $(this).data('key'), value = $(this).data('value');
      
      if(key) {
        // Save the key/val to filter JS object
        trigger.addClass('active').data('last-key', key);
        $('.title', trigger).text($(this).text());
        if(key == 'grades_served') {
          $('.char-form input#filter').val(value);
        } else {
          charFilters[key] = value;
        }
      } else {
        // Clear the selection
        $('.title', trigger).text(trigger.data('title'));
        var lastKey = trigger.data('last-key');
        if(lastKey == 'grades_served') {
          $('.char-form input#filter').val(null);
        } else {
          delete charFilters[lastKey];
        }
        trigger.removeClass('active').data('last-key', null);
      }
      trigger.dropdown('toggle');
      return false;
    });
    
    $('#characteristics .search').click(function(e) {
      var j = JSON.stringify(charFilters);
      var f = $('.char-form input#filter').val();
      if($.isEmptyObject(j) && !f) {
        return false;
      }
      $('.char-form input#complex').val(j);
      $('.char-form').submit();
      return true;
    });

  });  
  

